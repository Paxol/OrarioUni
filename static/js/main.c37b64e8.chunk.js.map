{"version":3,"sources":["redux/data.js","redux/index.js","context/categorieLezioni.js","ContainerOrari/ContainerOrari.jsx","ContainerOrari/index.js","App.js","index.js"],"names":["selectOrarioLezioni","state","celle","map","c","data","moment","split","reverse","join","nome_insegnamento","inizio","ora_inizio","fine","ora_fine","id_insegnamento","codice_insegnamento","selectOrarioGiorno","orari","giornata","filter","isSame","sort","a","b","selectOrarioSettimana","settimana","isAfter","isBefore","selectOrarioSuccessivo","altro","endOf","store","createStore","action","console","log","type","payload","applyMiddleware","ReduxThunk","CategorieLezioni","getData","loaded","localStorage","getItem","name","JSON","parse","setData","materia","tipologia","setItem","stringify","getTipologia","getString","values","this","undefined","Component","CategorieLezioniContext","createContext","TabellaOrario","categorieLezioni","Table","striped","bordered","hover","o","i","key","orario","categoriaSelezionata","handleChangeCategoria","v","props","Consumer","Item","format","value","onChange","target","ContainerOrari","connect","isDataLoaded","fetchAPI","dispatch","myHeaders","Headers","append","urlencoded","URLSearchParams","fetch","method","headers","body","redirect","then","response","json","result","catch","error","giorno","useSelector","useEffect","Container","length","App","useState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c37b64e8.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\n// ACTIONS\r\nconst CHANGE_DATA = \"orario_elly/data/CHANGE_DATA\";\r\n\r\nexport default function reducer(state, action) {\r\n\tconsole.log(action)\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_DATA:\r\n\t\t\treturn action.payload;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport function fetchAPI() {\r\n\treturn (dispatch => {\r\n\t\tlet myHeaders = new Headers();\r\n\t\tmyHeaders.append(\"x-requested-with\", \"XMLHttpRequest\");\r\n\t\tmyHeaders.append(\"content-type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n\r\n\t\tlet urlencoded = new URLSearchParams();\r\n\t\turlencoded.append(\"view\", \"easycourse\");\r\n\t\turlencoded.append(\"form-type\", \"corso\");\r\n\t\turlencoded.append(\"include\", \"corso\");\r\n\t\turlencoded.append(\"txtcurr\", \"2 anno - Generale\");\r\n\t\turlencoded.append(\"anno\", \"2020\");\r\n\t\turlencoded.append(\"corso\", \"3050\");\r\n\t\turlencoded.append(\"anno2[]\", \"GEN|2\");\r\n\t\turlencoded.append(\"date\", \"21-09-2020\");\r\n\t\turlencoded.append(\"periodo_didattico\", \"\");\r\n\t\turlencoded.append(\"_lang\", \"it\");\r\n\t\turlencoded.append(\"list\", \"0\");\r\n\t\turlencoded.append(\"week_grid_type\", \"-1\");\r\n\t\turlencoded.append(\"ar_codes_\", \"\");\r\n\t\turlencoded.append(\"ar_select_\", \"\");\r\n\t\turlencoded.append(\"col_cells\", \"0\");\r\n\t\turlencoded.append(\"empty_box\", \"0\");\r\n\t\turlencoded.append(\"only_grid\", \"0\");\r\n\t\turlencoded.append(\"highlighted_date\", \"0\");\r\n\t\turlencoded.append(\"all_events\", \"0\");\r\n\t\turlencoded.append(\"faculty_group\", \"0\");\r\n\t\turlencoded.append(\"all_events\", \"1\");\r\n\r\n\t\tlet requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: myHeaders,\r\n\t\t\tbody: urlencoded,\r\n\t\t\tredirect: 'follow'\r\n\t\t};\r\n\r\n\t\treturn fetch(\"https://cors-anywhere.herokuapp.com/https://agendastudenti.unipr.it/grid_call.php\", requestOptions)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(result => dispatch(changeData(result)))\r\n\t\t\t.catch(error => console.error(error));\r\n\t})\r\n}\r\n\r\nexport function changeData(data) {\r\n\treturn {\r\n\t\ttype: CHANGE_DATA,\r\n\t\tpayload: data\r\n\t}\r\n}\r\n\r\nexport function selectOrarioLezioni(state) {\r\n\tif (state) {\r\n\t\tconst orari = state.celle.map(c => {\r\n\t\t\tlet data = moment(c.data.split('-').reverse().join('-'))\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata,\r\n\t\t\t\tnome_insegnamento: c.nome_insegnamento,\r\n\t\t\t\tinizio: c.ora_inizio,\r\n\t\t\t\tfine: c.ora_fine,\r\n\t\t\t\tid_insegnamento: c.codice_insegnamento,\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn orari\r\n\t}\r\n}\r\n\r\nexport function selectOrarioGiorno(state) {\r\n\tconst orari = selectOrarioLezioni(state);\r\n\r\n\tif (orari) {\r\n\t\tconst giornata = orari.filter(c => moment().isSame(c.data, 'day'))\r\n\t\tgiornata.sort((a, b) => {\r\n\t\t\treturn (a.inizio < b.inizio) ? -1 : 0;\r\n\t\t})\r\n\t\treturn giornata;\r\n\t}\r\n}\r\n\r\nexport function selectOrarioSettimana(state) {\r\n\tconst orari = selectOrarioLezioni(state);\r\n\r\n\tif (orari) {\r\n\t\tconst settimana = orari.filter(c => c.data.isAfter(moment()) && moment().isSame(c.data, 'week'));\r\n\t\tsettimana.sort((a, b) => {\r\n\t\t\tif (a.data.isBefore(b.data)) {\r\n\t\t\t\treturn -1;\r\n\t\t\t} else if (a.data.isSame(b.data, 'day')) {\r\n\t\t\t\treturn (a.inizio < b.inizio) ? -1 : 0;\r\n\t\t\t} else return 1;\r\n\t\t});\r\n\r\n\t\treturn settimana;\r\n\t}\r\n}\r\n\r\nexport function selectOrarioSuccessivo(state) {\r\n\tconst orari = selectOrarioLezioni(state);\r\n\r\n\tif (orari) {\r\n\t\tconst altro = orari.filter(c => c.data.isAfter(moment().endOf('week')))\r\n\t\taltro.sort((a, b) => {\r\n\t\t\tif (a.data.isBefore(b.data)) {\r\n\t\t\t\treturn -1;\r\n\t\t\t} else if (a.data.isSame(b.data, 'day')) {\r\n\t\t\t\treturn (a.inizio < b.inizio) ? -1 : 0;\r\n\t\t\t} else return 1;\r\n\t\t});\r\n\r\n\t\treturn altro\r\n\t}\r\n}\r\n\r\n","import dataReducer from './data';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nimport ReduxThunk from 'redux-thunk'; \r\n\r\nexport const store = createStore(dataReducer, applyMiddleware(ReduxThunk))","import React, { createContext } from 'react';\r\n\r\nclass CategorieLezioni {\r\n    static values = [\"\", \"In diretta\", \"Video su Elly\"];\r\n\r\n    constructor() {\r\n        this.data = undefined;\r\n    }\r\n\r\n    getData = () => {\r\n        if (!this.data) {\r\n            const loaded = localStorage.getItem(CategorieLezioni.name);\r\n            if (loaded) {\r\n                this.data = JSON.parse(loaded);\r\n            } else {\r\n                this.data = {};\r\n            }\r\n        }\r\n\r\n        return this.data;\r\n    }\r\n\r\n    setData = (materia, tipologia) => {\r\n        this.data[materia] = tipologia;\r\n        localStorage.setItem(CategorieLezioni.name, JSON.stringify(this.data));\r\n    }\r\n\r\n    getTipologia = (materia) => {\r\n        return this.data[materia];\r\n    }\r\n\r\n    getString = (tipologia) => {\r\n        return CategorieLezioni.values[tipologia] || \"\";\r\n    }\r\n}\r\n\r\nconst CategorieLezioniContext = createContext(null);\r\nconst withCategorieLezioni = Component => props => (\r\n    <CategorieLezioniContext.Consumer>\r\n        {categorieLezioni => <Component {...props} categorieLezioni={categorieLezioni} />}\r\n    </CategorieLezioniContext.Consumer>\r\n)\r\n\r\nexport default CategorieLezioni;\r\nexport { CategorieLezioniContext, withCategorieLezioni };","import React, { useEffect } from 'react';\n\nimport Container from 'react-bootstrap/Container';\n\nimport { connect, useSelector } from 'react-redux';\n\nimport { fetchAPI, selectOrarioGiorno, selectOrarioSettimana, selectOrarioSuccessivo } from '../redux/data';\nimport { Table } from 'react-bootstrap';\n\nimport CategorieLezioni, { withCategorieLezioni } from '../context/categorieLezioni';\n\n//import { Test } from './ContainerOrari.styles';\n\nconst ContainerOrari = ({ isDataLoaded, fetchAPI }) => {\n  const giorno = useSelector(selectOrarioGiorno);\n  const settimana = useSelector(selectOrarioSettimana);\n  const altro = useSelector(selectOrarioSuccessivo);\n\n  useEffect(() => {\n    if (!isDataLoaded)\n      fetchAPI();\n  }, [isDataLoaded, fetchAPI]);\n\n  console.log(giorno);\n\n  return (\n    <Container>\n      {\n        isDataLoaded ? (\n          <>\n            <h1>Lezioni di oggi</h1>\n            {\n              giorno && giorno.length > 0 ? (\n                <TabellaOrario orari={giorno} />\n              ) : (\n                  <div>Non ci sono lezioni per oggi</div>\n                )\n            }\n            <hr />\n\n            <h1>Lezioni della settimana</h1>\n            {\n              settimana && settimana.length > 0 ? (\n                <TabellaOrario orari={settimana} />\n              ) : (\n                  <div>Non ci sono altre lezioni per questa settimana</div>\n                )\n            }\n            <hr />\n\n            <h2>Lezioni successive</h2>\n            {\n              altro && altro.length > 0 ? (\n                <TabellaOrario orari={altro} />\n              ) : (\n                  <div>Non ci sono altre lezioni</div>\n                )\n            }\n          </>\n        ) : (\n            <h1>Caricamento...</h1>\n          )\n      }\n    </Container>\n  )\n};\n\nconst TabellaOrario = withCategorieLezioni(({ orari, categorieLezioni }) => (\n  <Table striped bordered hover>\n    <thead>\n      <tr>\n        <th>Data</th>\n        <th>Insegnamento</th>\n        <th>Orario</th>\n        <th>Modalità lezione</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        orari.map((o, i) => <Item key={i} orario={o}\n          categoriaSelezionata={categorieLezioni.getTipologia(o.id_insegnamento)}\n          handleChangeCategoria={(v) => categorieLezioni.setData(o.id_insegnamento, v)} />)\n      }\n    </tbody>\n  </Table>\n));\n\nconst Item = ({ orario: { data, nome_insegnamento, inizio, fine }, categoriaSelezionata, handleChangeCategoria }) => (\n  <tr>\n    <td>{data && data.format(\"DD/MM/YYYY\")}</td>\n    <td>{nome_insegnamento}</td>\n    <td>{inizio} - {fine}</td>\n    <td>\n      <select value={categoriaSelezionata} onChange={({ target: { value } }) => {\n        handleChangeCategoria(value);\n      }}>\n        {\n          CategorieLezioni.values.map((c, i) => (\n            <option key={i} value={i}>{c}</option>\n          ))\n        }\n      </select>\n    </td>\n  </tr>\n);\n\nconst mapStateToProps = (state => {\n  return { isDataLoaded: state != null }\n});\n\nexport default connect(mapStateToProps, { fetchAPI })(ContainerOrari);\n","import ContainerOrari from './ContainerOrari';\n\nexport default ContainerOrari;\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux';\r\n\r\nimport ContainerOrari from './ContainerOrari';\r\n\r\nimport CategorieLezioni, { CategorieLezioniContext } from './context/categorieLezioni';\r\n\r\nfunction App() {\r\n  const [categorieLezioni] = useState(new CategorieLezioni())\r\n\r\n  useEffect(() => {\r\n    categorieLezioni && categorieLezioni.getData();\r\n  })\r\n\r\n  return (\r\n    <CategorieLezioniContext.Provider value={categorieLezioni}>\r\n      <Provider store={store}>\r\n        <ContainerOrari />\r\n      </Provider>\r\n    </CategorieLezioniContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}